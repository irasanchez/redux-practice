/**
 * Challenge:
 * 
 * Do it again, from scratch!
 * 
 * 1. Action creators for increment, decrement, double, and halve
 * 2. Reducer to handle these actions 👆🏻
 */

const redux = require("redux")

//initial state
const initialState = {
    count: 0,
    favoriteThings: [],
    youtubeVideo: {
        title: "",
        viewCount: 0,
        votes: {
          up: 0, 
          down: 0
        }
    }
}

//action creators
function change (amount=1) {
    return {
        type: "CHANGE_COUNT",
        payload: amount
    }
}

function double () {
    return {
        type: "DOUBLE"
    }
}

function halve () {
    return {
        type: "HALVE"
    }
}

function addFavoriteThing(thing) {
    return {
        type: "ADD_FAVORITE_THING",
        payload: thing
    }
}

function removeFavoriteThing(thing){
  return {
    type: "REMOVE_FAVORITE_THING",
    payload: thing
  }
}

function setVideoTitle(title) {
  return {
    type: "SET_VIDEO_TITLE",
    payload: title
  }
}

function upVote() {
  return {
    type: "UPVOTE"
  }
}

function downVote() {
  return {
    type: "DOWNVOTE"
  }
}

//reducer
function reducer (state = initialState, {type, payload}) {
    switch(type) {
        case "CHANGE_COUNT":
            return {
                ...state,
                count: state.count + payload
            }
        case "DOUBLE":
            return {
                ...state,
                count: state.count * 2
            }
        case "HALVE":
            return {
                ...state,
                count: Math.round(state.count / 2)
            }
        case "ADD_FAVORITE_THING":
            return {
              ...state,
              favoriteThings: [...state.favoriteThings, payload]
            }
        case "REMOVE_FAVORITE_THING":
            return {
              ...state,
              favoriteThings: state.favoriteThings.filter(thing=>{
                return thing !== payload
              })
            }
        case "SET_VIDEO_TITLE":
            return {
              ...state,
              youtubeVideo: {
                ...state.youtubeVideo,
                title: payload
              }
            }
        case "UPVOTE":
            return {
              ...state,
              youtubeVideo: {
                ...state.youtubeVideo,
                votes: {
                  ...state.youtubeVideo.votes,
                  up: state.youtubeVideo.votes.up + 1
                }
              }
            }
        case "DOWNVOTE":
            return {
              ...state,
              youtubeVideo: {
                ...state.youtubeVideo,
                votes: {
                  ...state.youtubeVideo.votes,
                  down: state.youtubeVideo.votes.down + 1
                }
              }
            }
        
        default:
            return state
    }
}

const store = redux.createStore(reducer)
store.subscribe(() => {
  console.log(store.getState())
})

store.dispatch(change(10))
store.dispatch(change(-3))
store.dispatch(change(5))
store.dispatch(double())
store.dispatch(change(-1))
store.dispatch(halve())
store.dispatch(addFavoriteThing("Raindrops on roses"))
store.dispatch(addFavoriteThing("Whiskers on kittens"))
store.dispatch(setVideoTitle("Learn Redux"))
store.dispatch(upVote())
store.dispatch(downVote())